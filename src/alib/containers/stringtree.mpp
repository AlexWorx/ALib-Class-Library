//==================================================================================================
/// \file
/// This header-file is part of the \aliblong.
/// With supporting legacy or module builds, .mpp-files are either recognized by the build-system
/// as C++20 Module interface files, or are included by the
/// \ref alib_manual_modules_impludes "import/include headers".
///
/// \emoji :copyright: 2013-2025 A-Worx GmbH, Germany.
/// Published under \ref mainpage_license "Boost Software License".
//==================================================================================================
#if !defined(ALIB_C20_MODULES) || ((ALIB_C20_MODULES != 0) && (ALIB_C20_MODULES != 1))
#   error "Symbol ALIB_C20_MODULES has to be given to the compiler as either 0 or 1"
#endif
#if ALIB_C20_MODULES
    module;
#endif
// ======================================   Global Fragment   ======================================
#include "alib/containers/containers.prepro.hpp"

#include <iterator>
#include <cmath>
#include <algorithm>

#if defined( _WIN32 ) || defined(__APPLE__)
#   include <clocale>
#endif
#if defined(_WIN32)
#    include <intrin.h>
#endif
#include <clocale>
#include <limits>
#include <vector>
#include <algorithm>

// ===========================================   Module   ==========================================
#if ALIB_C20_MODULES
    /// This is a C++ Module of the \aliblong. Due to the dual-compile option - as either
    /// C++20 Modules or legacy C++ inclusion, the C++20 Module names are not of further interest
    /// or use.<br>
    /// In general, the names equal the names of the header files listed in the chapter
    /// \ref alib_manual_modules_impludes of the \alib User Manual.
    /// This chapter, among others, provides further explanations.
    export module ALib.Containers.StringTree;
    import        ALib.Lang;
#  if ALIB_CONTAINERS
    import        ALib.Containers.HashTable;
#  endif
#  if ALIB_STRINGS
    import        ALib.Strings;
#  endif
#else
#include "ALib.Lang.H"
#include "ALib.Containers.HashTable.H"
#include "ALib.Strings.H"
#endif

// ==========================================   Exports   ==========================================
#if ALIB_C20_MODULES
    export import ALib.Containers.init;
#else
#   ifndef ALIB_GUARD_CONTAINERS_INIT
#       define ALIB_GUARD_CONTAINERS_INIT 1
#       include "alib/containers/recycling.inl"
#       include "alib/containers/valuedescriptor.inl"
#   endif
#endif
#include "alib/containers/detail/stringtreebase.inl"
#if ALIB_STRINGS
#   include "alib/containers/stringtree.inl"
#endif



