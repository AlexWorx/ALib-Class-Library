//==================================================================================================
/// \file
/// This header-file is part of the \aliblong.
/// With supporting legacy or module builds, .mpp-files are either recognized by the build-system
/// as C++20 Module interface files, or are included by the
/// \ref alib_manual_modules_impludes "import/include headers".
///
/// \emoji :copyright: 2013-2025 A-Worx GmbH, Germany.
/// Published under \ref mainpage_license "Boost Software License".
//==================================================================================================
#if !defined(ALIB_C20_MODULES) || ((ALIB_C20_MODULES != 0) && (ALIB_C20_MODULES != 1))
#   error "Symbol ALIB_C20_MODULES has to be given to the compiler as either 0 or 1"
#endif
#if ALIB_C20_MODULES
    module;
#endif
// ======================================   Global Fragment   ======================================
#include "alib/boxing/boxing.prepro.hpp"
#include "alib/monomem/monomem.prepro.hpp"
#include "alib/enumops/enumops.prepro.hpp"
#include "alib/variables/variables.prepro.hpp"
#include "alib/alox/alox.prepro.hpp"

#include <vector>

#include "ALib.Boxing.StdFunctors.H"

// ===========================================   Module   ==========================================
#if ALIB_C20_MODULES
    /// This is a C++ Module of the \aliblong. Due to the dual-compile option - as either
    /// C++20 Modules or legacy C++ inclusion, the C++20 Module names are not of further interest
    /// or use.<br>
    /// In general, the names equal the names of the header files listed in the chapter
    /// \ref alib_manual_modules_impludes of the \alib User Manual.
    /// This chapter, among others, provides further explanations.
    export module ALib.ALox;
    export import ALib.ALox.init;
       import     ALib.ALox.Impl;
       import     ALib.Lang;
       import     ALib.Time;
       import     ALib.EnumOps;
       import     ALib.Threads;
       import     ALib.Strings;
       import     ALib.Exceptions;
#else
#      include   "ALib.Time.H"
#      include   "ALib.Threads.H"
#      include   "ALib.Exceptions.H"
#      include   "ALib.Variables.H"
#   if !defined(ALIB_INC_ALOX_INIT_MPP)
#       define ALIB_INC_ALOX_INIT_MPP
#       include  "alib/alox/alox_init.mpp"
#   endif
#endif

// ==========================================   Exports   ==========================================
#if (ALIB_DEBUG && ALOX_DBG_LOG) || ALOX_REL_LOG
    // this is now a little tough: if this is legacy compile, we "import" the LI class manually!
#   if !ALIB_C20_MODULES && !defined(ALIB_INC_ALOX_IMPL_INL)
#       define ALIB_INC_ALOX_IMPL_INL
#     include "alib/alox/detail/loxpimpl.inl"
#   endif
#   include "alib/alox/log.inl"
#   include "alib/alox/lox.inl"
#   include "alib/alox/logtools.inl"
#endif

