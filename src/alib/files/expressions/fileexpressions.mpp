//==================================================================================================
/// \file
/// This header-file is part of the \aliblong.
/// With supporting legacy or module builds, .mpp-files are either recognized by the build-system
/// as C++20 Module interface files, or are included by the
/// \ref alib_manual_modules_impludes "import/include headers".
///
/// \emoji :copyright: 2013-2025 A-Worx GmbH, Germany.
/// Published under \ref mainpage_license "Boost Software License".
//==================================================================================================
#if !defined(ALIB_C20_MODULES) || ((ALIB_C20_MODULES != 0) && (ALIB_C20_MODULES != 1))
#   error "Symbol ALIB_C20_MODULES has to be given to the compiler as either 0 or 1"
#endif
#if ALIB_C20_MODULES
    module;
#endif
// ======================================   Global Fragment   ======================================
#include <fstream>

#include "alib/strings/strings.prepro.hpp"
#include "alib/boxing/boxing.prepro.hpp"
#include "alib/enumops/enumops.prepro.hpp"
#include "alib/enumrecords/enumrecords.prepro.hpp"
#include "alib/resources/resources.prepro.hpp"
#include "alib/camp/camp.prepro.hpp"
#include "alib/files/files.prepro.hpp"

#include "ALib.Monomem.StdContainers.H"
#include "ALib.Expressions.Impl.H"

// ===========================================   Module   ==========================================
#if ALIB_C20_MODULES
    /// This is a C++ Module of the \aliblong. Due to the dual-compile option - as either
    /// C++20 Modules or legacy C++ inclusion, the C++20 Module names are not of further interest
    /// or use.<br>
    /// In general, the names equal the names of the header files listed in the chapter
    /// \ref alib_manual_modules_impludes of the \alib User Manual.
    /// This chapter, among others, provides further explanations.
    export module ALib.Files.Expressions;
       import     ALib.Files;
       import     ALib.Expressions;
       import     ALib.Lang;
       import     ALib.EnumOps;
#   if !ALIB_SINGLE_THREADED
       import     ALib.Threads;
#   endif
       import     ALib.Containers.List;
       import     ALib.Containers.HashTable;
       import     ALib.Containers.LRUCacheTable;
       import     ALib.Containers.StringTree;
       import     ALib.Monomem;
       import     ALib.Monomem.SharedMonoVal;
       import     ALib.Boxing;
       import     ALib.Strings;
       import     ALib.Strings.StdIOStream;
       import     ALib.Resources;
       import     ALib.EnumRecords;
       import     ALib.Format;
       import     ALib.System;
       import     ALib.Format.Paragraphs;
       import     ALib.Exceptions;
       import     ALib.Camp;
#else
#      include   "ALib.Files.H"
#      include   "ALib.Expressions.H"
#endif

// ==========================================   Exports   ==========================================
#include "alib/files/expressions/fileexpressions.inl"


