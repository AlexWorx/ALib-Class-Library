[ALIB]
Alignment=0,Left,1,1,Right,1,2,Center,1
Bool=0,False,1,1,True,1,0,0,1,1,1,1,0,No,1,1,Yes,1,0,Off,2,1,On,2,0,-,1,1,Ok,2
Caching=0,Disabled,1,1,Enabled,1,1,Auto,1
Case=0,Sensitive,1,1,Ignore,1
ContainerOp=0,Insert,1,1,Remove,1,3,GetCreate,4,2,Get,1,4,Create,1
CurrentData=0,Keep,1,1,Clear,1
Inclusion=0,Include,1,1,Exclude,1
Initialization=0,Suppress,1,1,Default,1,2,Nulled,1,0,None,2,1,Initialize,1,2,Zero,1
Phase=0,Begin,1,1,End,1
Propagation=0,Omit,1,1,ToDescendants,1
Reach=0,Global,1,1,Local,1
Responsibility=0,KeepWithSender,1,1,Transfer,1
Safeness=0,Safe,1,1,Unsafe,1
Side=0,Left,1,1,Right,1
SortOrder=0,Ascending,1,1,Descending,1
SourceData=0,Copy,1,1,Move,1
Switch=0,Off,2,1,On,2
Timezone=0,Local,1,1,UTC,1
Timing=0,Async,1,1,Sync,1,0,Asynchronous,1,1,Synchronous,1,1,Synchronized,1
ValueReference=0,Absolute,1,1,Relative,1
Whitespaces=0,Trim,1,1,Keep,1
VARE<=variables::
VARE=0,OK,,1,ErrorOpeningFile,VARERF,2,ErrorWritingFile,VAREWF
VARERF=Can't open {}file {!Q'} for reading.
VAREWF=Can't open {}file {!Q'} for writing.
VarPrio=0,NONE,1,1000,AutoDetected,1,2000,DefaultValues,1,4000,Standard,1,6000,ConfigFile,2,8000,Environment,1,10000,SessionFile,8,12000,CLI,2,14000,Session,2,max,Protected,1
CFGPlgEnv=Environment Variables
CFGPlgCLI=Command Line Arguments
CFGIniWB=writeback
CFGBTF=False I 1,True I 1,0 I 1,1 I 1,No I 1,Yes I 1,Off I 3,On I 2,--- I 1,OK I 2
Var0=1|ALIB/LOCALE|S
Var1=2|ALIB/WAIT_FOR_KEY_PRESS|B
Var2=3|ALIB/HAS_CONSOLE_WINDOW|B
Var_C1=Defines the locale of the application. If empty or not set, the system's locale is used.\nIf set, a UTF8 local should be used, for example 'us_US.UTF-8' or 'de_DE.UTF-8'
Var_C2=If true, the process waits for a key stroke on termination. If empty, under Windows\nbehavior is detected, under other OSes, defaults to false.
Var_C3=Boolean value that denotes what its name indicates. If empty, under Windows value is \ndetected, under other OSes, defaults to true.
INI_CMT_ALIB=@>'/// '@HL-General ALib library settings.\n@HL-
EXIT_MSG=ALIB: Press 'Enter' to exit...
ACAlgos=0,NONE,1,31,ALL,1,1,Uncompressed,1,2,MinMax,1,4,Sparse,1,8,VerySparse,1,16,Incremental,1,32,Huffman,1
Months=January,February,March,April,May,June,July,August,September,October,November,December
Days=Sunday,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,
DurUnts=zero time, days, day, hours, hour, minutes, minute, seconds, second, ms, ms, µs, µs, ns, ns
FMTDT=yyyy-MM-dd HH:mm:ss
FMTCI=[@ sf:sl from ''ya'' by ''ta'']
FMTCINT=<None>
FMTCINY=<None>
FMTCINR=<Null>
SF=0,Root,1,1,Current,1,3,HomeConfig,5,2,Home,1,4,Module,1,5,Temp,1,6,VarTemp,1
SE<=glibc::
OSERR=GNU-C Library call returned {!Q} ({}).
UknSE=GNU-C Library call returned ({}). (Unknown error number)
SE=-1,UNKNOWN,UknSE,0,OK,,1,EPERM,OSERR,2,ENOENT,OSERR,3,ESRCH,OSERR,4,EINTR,OSERR,5,EIO,OSERR,6,ENXIO,OSERR,7,E2BIG,OSERR,8,ENOEXEC,OSERR,9,EBADF,OSERR,10,ECHILD,OSERR,11,EAGAIN,OSERR,12,ENOMEM,OSERR,13,EACCES,OSERR,14,EFAULT,OSERR,15,ENOTBLK,OSERR,16,EBUSY,OSERR,17,EEXIST,OSERR,18,EXDEV,OSERR,19,ENODEV,OSERR,20,ENOTDIR,OSERR,21,EISDIR,OSERR,22,EINVAL,OSERR,23,ENFILE,OSERR,24,EMFILE,OSERR,25,ENOTTY,OSERR,26,ETXTBSY,OSERR,27,EFBIG,OSERR,28,ENOSPC,OSERR,29,ESPIPE,OSERR,30,EROFS,OSERR,31,EMLINK,OSERR,32,EPIPE,OSERR,33,EDOM,OSERR,34,ERANGE,OSERR,35,EDEADLK,OSERR,36,ENAMETOOLONG,OSERR,37,ENOLCK,OSERR,38,ENOSYS,OSERR,39,ENOTEMPTY,OSERR,40,ELOOP,OSERR,42,ENOMSG,OSERR,43,EIDRM,OSERR,44,ECHRNG,OSERR,45,EL2NSYNC,OSERR,46,EL3HLT,OSERR,47,EL3RST,OSERR,48,ELNRNG,OSERR,49,EUNATCH,OSERR,50,ENOCSI,OSERR,51,EL2HLT,OSERR,52,EBADE,OSERR,53,EBADR,OSERR,54,EXFULL,OSERR,55,ENOANO,OSERR,56,EBADRQC,OSERR,57,EBADSLT,OSERR,59,EBFONT,OSERR,60,ENOSTR,OSERR,61,ENODATA,OSERR,62,ETIME,OSERR,63,ENOSR,OSERR,64,ENONET,OSERR,65,ENOPKG,OSERR,66,EREMOTE,OSERR,67,ENOLINK,OSERR,68,EADV,OSERR,69,ESRMNT,OSERR,70,ECOMM,OSERR,71,EPROTO,OSERR,72,EMULTIHOP,OSERR,73,EDOTDOT,OSERR,74,EBADMSG,OSERR,75,EOVERFLOW,OSERR,76,ENOTUNIQ,OSERR,77,EBADFD,OSERR,78,EREMCHG,OSERR,79,ELIBACC,OSERR,80,ELIBBAD,OSERR,81,ELIBSCN,OSERR,82,ELIBMAX,OSERR,83,ELIBEXEC,OSERR,84,EILSEQ,OSERR,85,ERESTART,OSERR,86,ESTRPIPE,OSERR,87,EUSERS,OSERR,88,ENOTSOCK,OSERR,89,EDESTADDRREQ,OSERR,90,EMSGSIZE,OSERR,91,EPROTOTYPE,OSERR,92,ENOPROTOOPT,OSERR,93,EPROTONOSUPPORT,OSERR,94,ESOCKTNOSUPPORT,OSERR,95,EOPNOTSUPP,OSERR,96,EPFNOSUPPORT,OSERR,97,EAFNOSUPPORT,OSERR,98,EADDRINUSE,OSERR,99,EADDRNOTAVAIL,OSERR,100,ENETDOWN,OSERR,101,ENETUNREACH,OSERR,102,ENETRESET,OSERR,103,ECONNABORTED,OSERR,104,ECONNRESET,OSERR,105,ENOBUFS,OSERR,106,EISCONN,OSERR,107,ENOTCONN,OSERR,108,ESHUTDOWN,OSERR,109,ETOOMANYREFS,OSERR,110,ETIMEDOUT,OSERR,111,ECONNREFUSED,OSERR,112,EHOSTDOWN,OSERR,113,EHOSTUNREACH,OSERR,114,EALREADY,OSERR,115,EINPROGRESS,OSERR,116,ESTALE,OSERR,117,EUCLEAN,OSERR,118,ENOTNAM,OSERR,119,ENAVAIL,OSERR,120,EISNAM,OSERR,121,EREMOTEIO,OSERR,122,EDQUOT,OSERR,123,ENOMEDIUM,OSERR,124,EMEDIUMTYPE,OSERR,125,ECANCELED,OSERR,126,ENOKEY,OSERR,127,EKEYEXPIRED,OSERR,128,EKEYREVOKED,OSERR,129,EKEYREJECTED,OSERR,130,EOWNERDEAD,OSERR,131,ENOTRECOVERABLE,OSERR,132,ERFKILL,OSERR,133,EHWPOISON,OSERR
ExcFmtExc=\nAn exception occurred while formatting another (!) exception:\n
PHT=0,NotGiven,1,1,String,1,2,Character,1,3,IntBase10,6,4,IntBinary,6,5,IntOctal,6,6,IntHex,6,7,Float,1,8,Bool,1,9,HashCode,1,10,Fill,4
FE<=format::
FE0=11,ArgumentIndexIs0,FMG11
FE1=12,ArgumentIndexOutOfBounds,FMG12
FE2=13,IncompatibleTypeCode,FMG13
FE3=101,MissingClosingBracket,FPS101
FE4=102,MissingPrecisionValuePS,FPS102
FE5=103,DuplicateTypeCode,FPS103
FE6=104,UnknownTypeCode,FPS104
FE7=105,ExclamationMarkExpected,FPS105
FE8=106,UnknownConversionPS,FPS106
FE9=107,PrecisionSpecificationWithInteger,FPS107
FE10=108,MissingReplacementStrings,FPS108
FE11=201,NegativeValuesInBracketsNotSupported,FJS101
FE12=202,MissingPrecisionValueJS,FJS102
FE13=203,HexadecimalFloatFormatNotSupported,FJS103
FE14=204,NoAlternateFormOfConversion,FJS104
FE15=205,NoPrecisionWithConversion,FJS105
FE16=206,UnknownDateTimeConversionSuffix,FJS106
FE17=207,UnknownConversionJS,FJS107
FE18=501,UnknownPropertyInFormatString,PFM501
FE19=502,ErrorInResultingFormatString,PFM502
FE20=510,MissingConfigurationVariable,PFM510
FE21=601,UnknownMarker,ST601
FE22=602,EndmarkerWithoutStart,ST602
FMG11=Argument index 0 not allowed.\nIn: {!Q}\n    >{!FillC-}^
FMG12=Argument index #{} is out of bounds. {} arguments are available.\nIn: {!Q}\n    >{!FillC-}^
FMG13=Detected placeholder type does not match given argument.\nPlaceholder number:    {}\nPlaceholder type:      {} ({})\nDeduced argument type: {!Q}\nNative argument type:   <{}>\nIn: {!Q}\n    >{!FillC-}^
FPS101=Closing bracket '}}' of placeholder not found (or syntax error).\nIn: {!Q}\n    >{!FillC-}^
FPS102=Missing precision value after '.' character.\nIn: {!Q}\n    >{!FillC-}^
FPS103=Duplicate type code {!Q'} given (previous was {!Q'}).\nNative argument type: <{}> \nIn: {!Q}\n    >{!FillC-}^
FPS104="Unknown type code {!Q'} given.\nIn: {!Q}\n    >{!FillC-}^\nNative argument type: <{}> "
FPS105=Expected '!' in continuation of placeholder.\nNative argument type: <{}> \nIn: {!Q}\n    >{!FillC-}^
FPS106=Unknown conversion "!{}".\nNative argument type: <{}> \nIn: {!Q}\n    >{!FillC-}^
FPS107=Precision not allowed with integer format.\nNative argument type: <{}> \nIn: {!Q}\n    >{!FillC-}^
FPS108=Missing pair of replacement strings "<src><repl>" after "!Replace".\nNative argument type: <{}> \nIn: {!Q}\n    >{!FillC-}^
FJS101=Brackets for negative values not implemented/supported.\nIn: {!Q}\n    >{!FillC-}^
FJS102=Missing precision value after '.' character.\nIn: {!Q}\n    >{!FillC-}^
FJS103=Hexadecimal float format not implemented/supported.\nIn: {!Q}\n    >{!FillC-}^
FJS104=Alternate form '#' not supported with conversion {!Q}.\nIn: {!Q}\n    >{!FillC-}^
FJS105=Precision specification (".{}") is not supported with conversion {!Q}.\nIn: {!Q}\n    >{!FillC-}^
FJS106=Unknown date/time conversion suffix {!Q'}.\nIn: {!Q}\n    >{!FillC-}^
FJS107=Unknown conversion character {!Q'}.\nIn: {!Q}\n    >{!FillC-}^
PFM501="Unknown property identifier \"{}{}\" in format string.\nFormat string: {!Q}.\nAllowed identifiers: "
PFM502=Error in resulting format string.\nSource format: {!Q}.
PFM510=Missing or empty configuration variable {!Q} containing user-defined format string.
ST601=Unknown marker at position {}.\n  Marked text: {!Q}.\n               >{!FillC-}^\n
ST602=Found an end-marker without a start marker at position {}.\n  Marked text: {!Q}.\n               >{!FillC-}^\n
BS=0,B,3,1,KiB,3,2,MiB,3,3,GiB,3,4,TiB,3,5,PiB,3,6,EiB,3,7,ZiB,3,8,YiB,3,9,RiB,3,10,QiB,3,11,B,1,12,kB,2,13,MB,2,14,GB,2,15,TB,2,16,PB,2,17,EB,2,18,ZB,2,19,YB,2,20,RB,2,21,QB,2

[ALOX]
Var0=1|ALOX/NO_IDE_LOGGER|B
Var1=2|ALOX/CONSOLE_TYPE|S
Var2=3|ALOX/%2/VERBOSITY_WITH_%1|ALOXV
Var3=4|ALOX/GLOBAL_SOURCE_PATH_TRIM_RULES|S
Var4=5|ALOX/%1/SOURCE_PATH_TRIM_RULES|S
Var5=6|ALOX/%1/DOMAIN_SUBSTITUTION|SV;
Var6=7|ALOX/%1/PREFIXES|S
Var7=8|ALOX/%1/DUMP_STATE_ON_EXIT|S
Var8=20|ALOX/%1/AUTO_SIZES|ALOXAS
Var9=21|ALOX/%1/FORMAT|ALOXFMI
Var10=22|ALOX/%1/FORMAT_DATE_TIME|ALOXFDT
Var11=23|ALOX/%1/FORMAT_MULTILINE|ALOXFML
Var12=24|ALOX/%1/FORMAT_TIME_DIFF|ALOXFTD
Var13=25|ALOX/%1/FORMAT_OTHER|ALOXFO
Var14=26|ALOX/%1/REPLACEMENTS|ALOXSR
Var15=27|ALOX/CONSOLE_LIGHT_COLORS|ALOXCLP
Var16=28|ALOX/CODEPAGE|I
Var_D1=false
Var_D2=default
Var_D8=none, verbosity=info, domain=/ALOX
Var_D21=%SF:%SL:%A3%SM %A3[%TC +%TL][%tN][%D]%A1#%# %V: ,[ERR],[WRN],     ,[***]
Var_D21A=%SF:%SL:%A3%SM %A3[%TC +%TL][%tN][%D]%A1#%#: %V,\ec0,\ec3,,\ec8,\e[0m
Var_D22="yyyy-MM-dd,HH:mm:ss, Days "
Var_D23=2,ALox: Multi line message follows: ,> ,,nulled,\\r
Var_D24=1000,---   , ns, µs, ms, s, m, h, days
Var_D25=---, ---, 3
Var_C1=If true, the creation of an additional, ide-specific debug logger is suppressed.\n(In particular suppresses DebugLogger (C#) and VStudioLogger (C++))
Var_C2=Influences the type of console logger to be created by method\nLox::CreateConsoleLogger which is also used by Log::AddDebugLogger\nPossible values are: default, plain, ansi, windows, noqtcreator
Var_C3="The verbosities of logger \"%2\" in lox \"%1\". Supports wildcards for domain paths.\n  Format: [ExportAll ;] [[*]domainpath[*] = Verbosity]  [;...] "
Var_C4=Defines global source path trim rules (applicable for all Lox instances).\n   Format: [ [*]sourcepath [, inclusion, trimoffset, sensitivity, replacement] ] [;...]
Var_C5=Defines source path trim rules for Lox "%1". \n   Format: [ [*]sourcepath [, inclusion, trimoffset, sensitivity, replacement] ] [;...]
Var_C7="Prefix strings for log domains of lox \"%1\".\n   Format: [ [*]domainpath[*] = prefixstring [, inclusion] ] [;...] "
Var_C8=Log information about lox "%1" on exit. Comma separated list of arguments define\nverbosity, domain and content of output. Possible values content arguments are:\n  All, Basic, Version, SPTR, Loggers, Domains, InternalDomains\n  ScopeDomains, DSR, PrefixLogablesOnce, LogData, ThreadMappings, \n  CompilationFlags. If NONE is given nothing is dumped.
Var_C20=Detected field sizes and tabulator positions of the meta-information portion and the \nthose of the log output, separated by ';'. (These is a generated and temporary values).
Var_C21=Meta info format of logger "%1", including signatures for verbosity strings and\nastring added to the end of each log statement.\n   Format: MetaInfo,Error,Warning,Info,Verbose,MsgSuffix
Var_C22=Date and time format of logger "%1".\n   Format: Date,Time,ElapsedDays
Var_C23=Multi-line format of logger "%1".\n   Format: Mode,Headline,Prefix,Suffix,Delimiter,DelimiterReplacement
Var_C24=Time difference entities of logger "%1".\n   Format: Minimum,None,Nanos,Micros,Millis,Secs,Mins,Hours, Days
Var_C25=Specifies three further format values: 1. A replacement string if no file name is available, \n2. A replacement string if no method name is available and 3. The minimum digits of the\nlog counter.
Var_C26=Pairs of search and replacement strings for text logger "%1".\n   Format: [search,replacement] [,...]
Var_C27=Evaluated by colorful loggers that dispose of light and dark colors. Those may adjust\ntheir foreground and background color accordingly. If not given, under Windows OS the right\nvalue is detected. Otherwise the value defaults to "foreground". In some occasions, the\n(detected or set) runtime environment might also indicate a different default value.\nPossible values are 'Auto', Foreground', 'Background' and 'Never'.
Verbosity=0,Verbose,1,1,Info,1,2,Warning,1,2,Warnings,1,3,Error,1,3,Errors,1,4,Off,1
Scope=0,Global,1,1,ThreadOuter,7,2,Filename,1,3,Method,1,4,ThreadInner,7,5,Path,7
StateInfo=0,NONE,1,1,Basic,1,2,Version,1,^9,LogData,4,4,Loggers,1,^6,DSR,2,8,Domains,1,^4,InternalDomains,1,0x100000,SPTR,2,^5,ScopeDomains,1,^7,PrefixLogables,1,^8,Once,1,^10,ThreadMappings,1,^21,CompilationFlags,1,0xFFFFFFFF,All,1
LCU=0,Auto,1,1,Never,1,2,Foreground,2,3,Background,2,2,ForeGround,1,3,BackGround,1
VVEA=ExportAll
TLFmtExc=\nAn exception occurred during formatting ALox logables:\n
INI_CMT_ALOX=@>'/// '@HL-Settings controlling ALox log output.\n@HL-

[CLI]
E<=cli::
E0=1,NoCommandGiven,ED1
E1=2,UnknownCommand,ED2
E2=10,ParsingOptions,ED10
E3=11,MissingOptionValue,ED11
E4=12,IllegalOptionNameContinuation,ED12
E5=20,ParsingCommand,ED20
E6=21,MissingParameterValue,ED21
ED1=No command given.
ED2=Unknown command found with CLI argument{!Q[]}={!Q}
ED10=Error parsing option. Usage:\n{}
ED20=Error parsing command.\nUsage: {}\n{}
ED11=Missing argument(s) of option {!Q<>} found with CLI argument{!Q[]}={!Q}.\nExpected {}, given {}.
ED12=Option identifier {!Q<>} found at start of CLI argument{!Q[]}={!Q},\nwhile CLI argument string continues with non-argument identifier characters.
ED21=Missing argument(s) of parameter {!Q<>} found with CLI argument{!Q[]}={!Q}.\nQuantity expected {}, quantity given {}.
DRM<=DryRunModes::
DRM=0,Off,1,2,CLIDeclarations,4,1,CLIArgs,1,3,Application,1

[EXPR]
T_VOID=Void
T_BOOL=Boolean
T_INT=Integer
T_FLOAT=Float
T_STR=String
T_DATE=DateTime
T_DUR=Duration
UO0=0,NONE
UO1=1,+
UO2=2,-
UO3=3,!
UO4=4,~
UO5=5,*
BO0=0,NONE,0
BO1=1,[],100
BO2=2,*,900
BO3=3,/,900
BO4=4,%,900
BO5=5,+,800
BO6=6,-,800
BO7=7,<<,700
BO8=8,>>,700
BO9=9,<,600
BO10=10,<=,600
BO11=11,>,600
BO12=12,>=,600
BO13=13,==,500
BO14=14,!=,500
BO15=15,&,470
BO16=16,^,460
BO17=17,|,450
BO18=18,&&,440
BO19=19,||,430
BO20=20,=,300
BO21=21,?:,200
UOA0=0,Not,!
BOA0=0,And,&&
BOA1=1,Or,||
BOA2=2,Sm,<
BOA3=3,Smaller,<
BOA4=4,Smeq,<=
BOA5=5,Smaller_Or_Equal,<=
BOA6=6,Gt,>
BOA7=7,Greater,>
BOA8=8,Gteq,>=
BOA9=9,Greater_Or_Equal,>=
BOA10=10,Eq,==
BOA11=11,Equals,==
BOA12=12,Neq,!=
BOA13=13,Not_equals,!=
EF=Expression I 4
EFT=throw
E<=expressions::
E0=1,SyntaxError,ED1
E1=-1,ExpressionInfo,ED-1
E2=-2,StdExceptionInfo,ED-2
E3=2,EmptyExpressionString,ED2
E4=5,SyntaxErrorExpectation,ED5
E5=6,UnknownUnaryOperatorSymbol,ED6
E6=7,UnknownBinaryOperatorSymbol,ED7
E7=14,UnknownIdentifier,ED14
E8=15,UnknownFunction,ED15
E9=-15,FunctionHint,ED-15
E10=16,UnaryOperatorNotDefined,ED16
E11=17,BinaryOperatorNotDefined,ED17
E12=22,MissingFunctionParentheses,ED22
E13=23,IdentifierWithFunctionParentheses,ED23
E14=25,IncompatibleTypesInConditional,ED25
E15=30,ExceptionInPlugin,ED30
E16=40,ExceptionInCallback,ED40
E17=50,NamedExpressionNotConstant,ED50
E18=51,NamedExpressionNotFound,ED51
E19=52,NestedExpressionNotFoundCT,ED52
E20=53,NestedExpressionCallArgumentMismatch,ED53
E21=54,NestedExpressionNotFoundET,ED54
E22=-54,WhenEvaluatingNestedExpression,ED-54
E23=55,NestedExpressionResultTypeError,ED55
E24=56,CircularNestedExpressions,ED56
E25=-56,CircularNestedExpressionsInfo,ED-56
E26=-500,InExpressionFormatter,ED-500
ED1=Syntax error parsing expression.
ED-1=Expression: {{{}}}\n             {!F}^->
ED-2=std::exception thrown: {!Q}.
ED2=Trying to parse empty expression string.
ED5=Syntax error while parsing expression{}
ED6=Unknown unary operator {!Q'} found.
ED7=Unknown binary operator {!Q'} found.
ED14=Unknown identifier {!Q}.
ED15=Unknown function '{}{}'.
ED-15=Found function {!Q}. Arguments not applicable.
ED16=Operator {!Q'} not defined for type {!Q}.
ED17=Operator {!Q'} not defined for types {!Q} and {!Q}.
ED22=Missing function parentheses '()' with call to function {!Q'}.
ED23=Function parentheses '()' are not allowed on identifier {!Q'}.
ED25=Incompatible types for conditional expression operator {!Q<>} : {!Q<>}.
ED30=Exception caught in 'callback function' while evaluating expression {!Q}.
ED40=Exception caught in 'callback function' while evaluating expression {!Q}.
ED50=Expression name has to be constant, if no expression return type is given.
ED51=Named expression {!Q} not found.
ED52=Compile-time defined nested expression {!Q} not found.
ED53=Erroneous arguments given with nested expression function {!Q}.
ED54=Evaluation-time defined nested expression {!Q} not found.
ED-54=Exception evaluating nested expression {!Q}.
ED55=Nested expression {!Q} returned wrong result type.\nType expected: {}\nType returned: {}
ED56=Circular nested expressions detected. Circular evaluation stack follows.
ED-56=Expression {!Q} contains nested expression {!Q}.
ED-500=Occurred in ExpressionFormatter expression #{}.\nof formatter string: {!Q}
EE1=: Closing brace ')' expected.
EE2=: Closing function parameter brace ')' expected.
EE3=: Closing subscript brace ']' expected.
EE4=: String literal closing quote ('"') expected.
EE5=: Operator expected.
EE6=: Colon ':' of conditional term expected.
EE7=: Right-hand side binary operand expected.
EE20=: Unexpected end of expression.
EE21=: Misplaced closing bracket.
EE22=: Misplaced subscript operator symbol.
EE23=: Misplaced comma.
ANON_EXPR_NAME=ANONYMOUS
VM_CMD_OPCODES=0,Constant,1,1,Function,1,2,Subroutine,1,4,JumpIfFalse,5,5,Jump,1
ProgListHeader=@HL-ALib Expression Compiler\n(c) 2025 AWorx GmbH. Published under MIT License (Open Source).\nMore Info: https://alib.dev\n@HL-Expression name: {}\n     Normalized: {{{}}}\n\n
ProgListHdl0=PC
ProgListHdl1=ResultType
ProgListHdl2=Command
ProgListHdl3=Param
ProgListHdl4=Stack
ProgListHdl5=Description
ProgListHdl6=ArgNo{Start..End}
ProgListLine={:<02} | {!AW} | {!AW} | {!AW} | {!AW} | {!AW} | {!AW} |{!Fill}{}\n
ProgListFooter=@HL-
CPA0=true I 4
CPA1=false I 5
CPA2=yes I 3
CPA3=no I 2
CPA4=on I 2
CPA5=off I 3
CPA6=Boolean I 4
CPA7=Integer I 3
CPA8=Float I 5
CPALen=Length I 3
CPM0=PI I 2
CPM1=E I 1
CPM2=abs I 3
CPM3=ceil I 4
CPM4=floor I 5
CPM5=trunc I 5
CPM6=round I 5
CPM7=rint I 4
CPM8=max I 3
CPM9=min I 3
CPM10=remainder I 6
CPM11=random I 4
CPM12=sin I 3
CPM13=asin I 4
CPM14=cos I 3
CPM15=acos I 4
CPM16=tan I 3
CPM17=atan I 4
CPM18=sinh I 4
CPM19=asinh I 5
CPM20=cosh I 4
CPM21=acosh I 5
CPM22=tanh I 4
CPM23=atanh I 5
CPM24=exp I 3
CPM25=exp2 I 4
CPM26=exp10 I 5
CPM27=log I 3
CPM28=log2 I 4
CPM29=log10 I 5
CPM30=pow I 3
CPM31=pow10 I 5
CPM32=sqrt I 4
CPM33=cbrt I 4
CPS0=NewLine I 1 1
CPS1=Tabulator I 3
CPS2=String I 3
CPS3=WildCardMatch I 1 1 1
CPS4=Format I 6
CPS5=ToUpper I 1 1
CPS6=ToLower I 1 1
CPS7=Compare I 4
CPS8=StartsWith I 1 1
CPS9=EndsWith I 1 1
CPS10=Substring I 4
CPS11=IndexOf I 3 1
CPS12=Count I 5
CPS13=Trim I 4
CPS14=TrimStart I 4 1
CPS15=TrimEnd I 4 1
CPS16=Integer I 3
CPS17=Float I 5
CPS18=Token I 3
CPS19=Hexadecimal I 3
CPS20=Octal I 3
CPS21=Binary I 3
CPS22=Replace I 4
CPS23=Repeat I 6
CPD0=January I 3,
CPD1=February I 3,
CPD2=March I 3,
CPD3=April I 3,
CPD4=May I 3,
CPD5=June I 3,
CPD6=July I 3,
CPD7=August I 3,
CPD8=September I 3,
CPD9=October I 3,
CPD10=November I 3,
CPD11=December I 3,
CPD12=Sunday I 3,
CPD13=Monday I 3,
CPD14=Tuesday I 3,
CPD15=Wednesday I 3,
CPD16=Thursday I 3,
CPD17=Friday I 3,
CPD18=Saturday I 3,
CPD19=NanoSecondS I 1 1 0,
CPD20=MicroSecondS I 3 1 0,
CPD21=MilliSecondS I 1 1 0,
CPD22=SecondS I 3 0,
CPD23=MinuteS I 3 0,
CPD24=Hours I 4,
CPD25=Days I 3,
CPD26=Weeks I 4,
CPD27=Months I 3,
CPD28=Years I 4,
CPD29=InDayS I 2 1 0,
CPD30=InHourS I 2 1 0,
CPD31=InMinuteS I 2 3 0,
CPD32=InSecondS I 2 3 0,
CPD33=InMilliSecondS I 2 1 1 0,
CPD34=InMicroSecondS I 2 3 1 0,
CPD35=InNanoSecondS I 2 1 1 0,
CPD36=InHertZ I 2 1 1,
CPD37=DateTime I 1 1,
CPD38=UtcDateTime I 1 1 1,
CPD39=Now I 3,
CPD40=Today I 5,
CPD41=UtcToday I 1 5,
CPD42=Age I 3,
CPD43=IsOlderThan I 2 1 1,
CPD44=GetYear I 1 1,
CPD45=GetMonth I 1 3,
CPD46=GetDay I 1 1,
CPD47=GetDayOfWeek I 1 1 1 1,
CPD48=GetHour I 1 1,
CPD49=GetMinute I 1 3,
CPD50=GetMilliSecond I 1 1 1,
CPD51=GetUtcYear I 1 1 1,
CPD52=GetUtcMonth I 1 1 3,
CPD53=GetUtcDay I 1 1 1,
CPD54=GetUtcDayOfWeek I 1 1 1 1 1,
CPD55=GetUtcHour I 1 1 1,
CPD56=GetUtcMinute I 1 1 3,
CPD57=GetUtcMilliSecond I 1 1 1 1

[FILES]
FT=0,Directory,1,1,SymbolicLinkToDir,15,3,SymbolicLinkToFile,15,2,Regular,1,4,Block,1,5,Character,1,6,Fifo,1,7,Socket,2,8,UNKNOWN_OR_ERROR,1
FT1=0,d,1,1,L,1,2,-,1,3,l,1,4,b,1,5,c,1,6,p,1,7,s,1
FT2=0,dr,1,1,ld,3,2,rf,1,3,lf,3,4,bl,1,5,ch,1,6,ff,1,7,so,2
FT3=0,dir,1,1,sld,3,2,reg,1,3,slf,3,4,blk,1,5,chr,1,6,ffo,1,7,sck,2
FQ=0,NONE,3,1,STATS,1,2,RESOLVED,3,3,MAX_DEPTH_REACHED,1,15,NOT_EXISTENT,5,4,NOT_FOLLOWED,5,5,NOT_CROSSING_FS,5,6,NO_AFS,5,10,NO_ACCESS_SL_TARGET,13,9,NO_ACCESS_SL,11,11,NO_ACCESS_DIR,11,8,NO_ACCESS,5,7,RECURSIVE,1,12,BROKEN_LINK,1,13,CIRCULAR_LINK,1,14,DUPLICATE,1,16,UNKNOWN_ERROR,5
FQ3=0,NON,3,1,STA,3,2,RES,3,3,MDR,3,4,NFO,3,5,NCF,3,6,NAF,3,7,REC,3,8,NAC,3,9,NSL,3,10,NAT,3,11,NAD,3,12,BRL,3,13,CIL,3,14,DUP,3,15,NEX,3,16,UKE,3
TFP=File Permission
TID=File Usr/Grp ID
TTY=File Type
CPF0=OwnerRead I 1 2
CPF1=OwnerWrite I 1 1
CPF2=OwnerExecute I 1 1
CPF3=GroupRead I 1 1
CPF4=GroupWrite I 1 1
CPF5=GroupExecute I 1 1
CPF6=OthersRead I 2 1
CPF7=OthersWrite I 2 1
CPF8=OthersExecute I 2 1
CPF9=Directory I 3
CPF10=SymbolicLinkDir I 1 1 1
CPF11=Regular I 3
CPF12=SymbolicLink I 1 1
CPF13=Block I 5
CPF14=Character I 9
CPF15=Fifo I 4
CPF16=Socket I 6
CPF17=Name I 4
CPF18=Type I 2
CPF19=IsDirectory I 2 3
CPF20=IsSymbolicLink I 2 1 1
CPF21=Size I 4
CPF22=Date I 4
CPF23=MDate I 1 1
CPF24=BDate I 1 1
CPF25=CDate I 1 1
CPF26=ADate I 1 1
CPF27=PermissionS I 4 0
CPF28=KiloBytes I 1 1
CPF29=MegaBytes I 1 1
CPF30=GigaBytes I 1 1
CPF31=TeraBytes I 1 1
CPF32=PetaBytes I 1 1
CPF33=ExaBytes I 1 1
CPF34=Owner I 5
CPF35=Group I 5
CPF36=UserID I 1 1 1
CPF37=GroupID I 1 1 1
CPF38=Path I 4
FFMT=ta h on gn s dm nal
